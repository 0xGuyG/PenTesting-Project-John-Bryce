#!/bin/bash

# Install the necessary apps

function Install(){
echo "[*] Updating System"
sudo apt-get update
echo "[*] Installing nmap"
sudo apt-get install nmap -y
echo "[*] Installing ipcalc"
sudo apt-get install ipcalc -y
echo "[*] Installing searchsploit"
sudo apt-get install searchsploit -y
echo "[*] Installing hydra"
sudo apt-get install hydra -y
echo "[*] Installing crunch"
sudo apt-get install crunch -y
}
Install

# Acquire start of scan to calculate runtime

start=$(date +%s)

function Q1(){
cd ~/Desktop

# Ascertain the lan range

network=$(ipcalc -n $(hostname -I) | grep -i network | awk '{print $2}')
echo $network " is the LAN Range"
echo "Commencing Ping Sweep:"
subnet=$(ip route | grep default | awk '{print $3}' | cut -d '.' -f 1-3)

# Perform a ping sweep to find active devices, put active devices into array

active_devices=()
for ip in {1..254}; do
    echo "Pinging $subnet.$ip"
    ping -c 1 -W 1 $subnet.$ip > /dev/null 2>&1
    if [ $? -eq 0 ]; then
        active_devices+=("$subnet.$ip")
        nmap -sV -T4 $subnet.$ip -oX $subnet.$ip
    fi
done

# Each device in the active devices array gets scanned for vulnerabilites

for device in "${active_devices[@]}"
do
    echo "Scanning $device for vulnerabilities..."
    result=$(nmap -sV -sC --script vuln -p- "$device" -oN $device-vuln)
    sploit=$(searchsploit --nmap $device > $device-sploit)
    if [[ "$result" == *"Host is up"* ]]; then
        echo "$result"
        searchsploit --nmap $device > $device-sploit
        echo >> $device-vuln
        cat $device-sploit >> $device-vuln 
        echo >> $device-vuln
    else
        echo "No vulnerabilities found on $device."
    fi
done

}
Q1

function Q2(){
cd ~/Desktop

# Prompt user for user list and password list, allow user to create one

read -p "Enter the path to the user list file: " user_file

echo "Do you want to use an existing password list or create a new one? (e/c)"
read choice

if [[ $choice == "e" ]]; then
 read -p "Enter the path to the password list file: " password_file
else
  echo "Enter minimum length for string"
  read min
  echo "Enter maximum length for string"
  read max
  echo "Enter character set for string"
  read charset
  crunch $min $max $charset -o passwordlist.txt
  echo "The password list was created at Desktop and was named passwordlist.txt"
  w=$(whoami)
  password_file="/home/$w/Desktop/passwordlist.txt"
fi

# Go through active devices and and open ports in each one, search for login services and bruteforce them

for device in "${active_devices[@]}"; do
open_ports=($(nmap -p- --open -sV $device | grep "open" | awk '{print $1}' | tr '/tcp' ' '))

	for port in "${open_ports[@]}"; do
   
		service=$(nmap -p $port -sV $device | grep "$port/" | awk '{print $3}')

		if [[ "$service" == "ftp" || "$service" == "ssh" || "$service" == "telnet" || "$service" == "http" || "$service" == "pop3" || "$service" == "imap" || "$service" == "smtp" || "$service" == "smb" ]]; then
			echo "Running hydra on $service service on port $port on device $device"
			hydra -L $user_file -P $password_file $service://$device:$port -v >> $device-vuln
		else echo "No login service available on $device on service $service on port $port"
		fi   
	done
done
}   
Q2

# Acquire scan finishing time

end=$(date +%s)

function Q3(){
	
# General statistics and Reports, user can lookup specific machine

echo "There were ${#active_devices[@]} active devices that were scanned"
runtime=$(($end - $start))
echo "The scan time was $runtimeÂ seconds"
echo "The reports on each live host were saved on your desktop individually and end with the suffix -vuln"
echo "If you would like to view the results of a specific machine please enter its' IP now"
read machine
cat $machine-vuln
}
Q3
